*CONTROLAR CUPOS MAXIMOS*

Features:

Validar disponibilidad de entradas antes de la compra

Descripción: El sistema debe verificar que haya entradas disponibles antes de permitir completar la compra
Criterios de aceptación:
Dado un evento con entradas disponibles, cuando un socio accede a comprar, entonces el sistema le permitirá realizar la operación.
Dado un evento sin entradas disponibles, cuando un socio accede a comprar, entonces el sistema debe bloquear la compra y mostrar un mensaje de cupo máximo alcanzado.
	Prioridad: Must Have
	Estimación: 3

Mostrar en tiempo real la cantidad de entradas disponibles

Descripción: El sistema debe mostrar cuántas entradas quedan para cada evento.
Criterio de aceptación:
El número debe actualizarse sin necesidad de recargar la página
	Prioridad: Should Have
	Estimación: 13

VALIDACIÓN DE INSCRIPCIÓN

Features:

Validar que el socio tenga la cuota al dia al momento de inscribirse en una clase

Descripción: El sistema debe bloquear la inscripción si el socio tiene deudas. 
Criterios de aceptación:
Dado un socio con deudas, cuando intente inscribirse, entonces el sistema debe rechazar la inscripción e informar el motivo.
Dado un socio sin deudas, cuando intente inscribirse, entonces el sistema debe permitir la inscripción.
Prioridad: Must Have 
Estimación: 13

Validar que el socio no esté previamente inscripto a la misma actividad

Descripción: Evitar que un socio se inscriba dos veces a la misma clase
Criterios de aceptación:
Dado un socio ya inscripto a una clase, cuando intente volver a inscribirse, entonces el sistema debe bloquear la operación y notificar al usuario.
Prioridad: Must Have
Estimación: 8


*5- Cálculo automático de deuda*
Features:
H.U 5.1- Actualizar deuda automáticamente al ingresar al sistema
Como socio
Quiero ver el monto actualizado de mi deuda cada vez que inicie sesión 
Para tener información sobre mi situación financiera con el club
Prioridad: Must Have
Estimación: 5
Criterios de aceptación:
Escenario de Éxito: Dado que un socio tiene una deuda pendiente, cuando inicie sesión, entonces el sistema debe mostrar el monto actualizado de su deuda.
Escenario de Fallo: Dado que un socio no tiene deuda, cuando inicie sesión, entonces el sistema debe mostrar un mensaje indicando "Sin Deudas".
	Reglas de negocio:
	Riesgos asociados:
Riesgo de actualización incorrecta de la deuda: Si el sistema no actualiza correctamente la deuda al iniciar sesión, podría mostrar información incorrecta al socio, lo que podría generar malentendidos. 
	Wireframes o Mockups: 

H.U 5.2- Generar automáticamente cuota mensual para cada socio
Como Administrador
Quiero poder generar automáticamente la cuota social
Para evitar errores manuales
Prioridad: Must have
Estimación: 8
Criterios de aceptación:
Escenario de Éxito:Dado el inicio de mes, cuando un socio se mantiene activo, entonces el sistema genera automáticamente una nueva cuota correspondiente al mes en curso.
Escenario de Fallo: Dado el inicio del mes, cuando un socio se mantiene activo, entonces el sistema no genera automáticamente una nueva cuota mensual, o genera una errónea.
	Reglas de negocio:
	Riesgos asociados:
Mal cálculo de la cuota: si el sistema genera erróneamente la cuota social, evadiendo montos correspondientes a un deporte o a una deuda anterior, se le cobrará menos de lo debido al socio.
	Wireframes o Mockups: 

H.U 5.3- Acumular cuotas impagas como deuda del socio
Como Administrador
Quiero aculumar las cuotas impagas de los socios mes a mes
Para que el monto total adeudado refleje la deuda real del socio
Prioridad: Must Have
Estimación: 8
Criterios de aceptación:
Escenario de Éxito: Dado que un socio no pago la cuota del  mes anterior, cuando accede al sistema, entonces el sistema debe sumar esa cuota a la deuda acumulada.
Escenario de Fallo: Dado que un socio no pago la cuota del mes anterior, cuando acceda al sistema, entonces el sistema no muestra correctamente el total adeudado o muestra un mensaje incorrecto como “Sin Deudas”.
	Reglas de negocio:
	Riesgos asociados:
Riesgo de acumulación incorrecta: Si el sistema no calcula bien las cuotas impagas, se puede generar una deuda incorrecta.
	Wireframes o Mockups: 

H.U 5.4- Mostrar deuda acumulado al iniciar sesión
Como Socio
Quiero poder visualizar la deuda que tengo al iniciar sesión en el sistema
Para poder saber lo que debo pagar
Prioridad: Should Have
Estimación: 5
Criterios de aceptación:
Escenario de Éxito: Dado un socio con cuotas impagas, cuando inicie sesión, entonces el sistema debe mostrar la deuda total acumulada, detallando la deuda de cada mes.
Escenario de Fallo: Dado un socio con cuotas impagas, cuando inicie sesión, entonces el sistema no muestra la deuda total acumulada.
Reglas de negocio: 
RNEG_03: Se tiene una tolerancia de 3 días luego de la fecha de vencimiento del pago de cuota social y/0 deportiva
	Riesgos asociados:
Continuar acumulando deuda: si el socio no visualiza la deuda, puede olvidarse y así seguir acumulando deuda mes a mes.
	Wireframes o Mockups: 

H.U 5.5- Actualizar deuda al registrar pagos
Como sistema de gestión del club
Quiero actualizar automáticamente la deuda del socio cuando se registran pago
Para reflejar correctamente el saldo adeudado y evitar errores en la gestión de cobros
Prioridad: Must Have 
Estimación: 5
Criterios de aceptación:
Escenario de Éxito: Dado un socio con deuda acumulada, cuando paga una o más cuotas, entonces el sistema debe actualizar el saldo adeudado restando los montos correspondientes.
Escenario de Fallo: Dado un socio sin deudas pendientes, cuando realiza un pago, entonces el sistema no debe modificar el saldo.
	Reglas de negocio:
	Riesgos asociados:
	Wireframes o Mockups: 

H.U 5.6- Notificar cuotas vencidas al iniciar sesión
Como administrador del sistema
Quiero poder notificar al Socio de sus cuotas vencidas cuando inicie sesión
Para recordarle que las abone
Prioridad: Should Have
Estimación: 8
Criterios de aceptación: 
Escenario de Éxito: Dado un socio con cuotas vencidas, cuando inicie sesión, entonces se muestra una notificación indicando que la deuda está vencida.
Escenario de Fallo: Dado un socio con cuotas vencidas, cuando inicie sesión, no se mostrará una notificación indicando que la deuda está vencida.
Reglas de negocio:
RNEG_03: Se tiene una tolerancia de 3 días luego de la fecha de vencimiento del pago de cuota social y/0 deportiva
Riesgos asociados:
Olvidar la deuda: si no se le recuerda al socio cada vez que entre al sistema acerca de sus cuotas vencidas, puede olvidar que las tiene.
Wireframes o Mockups:



**6- MANEJO DE ESTADO DE CUOTAS**
Features:
- **H.U 6.1- Asignar estado “Pendiente” al generar una nueva cuota mensual.**
**Como** sistema de gestión de socios 
**Quiero** que cada nueva cuota se registre con el estado “Pendiente”
**Para** permitir un control del estado de pago de las cuotas desde su creación.
**Prioridad:** Must Have 
**Estimación:** 3
**Criterios de aceptación:**
- Escenario de Éxito: Dado que se genere una nueva cuota, cuando el sistema la cree, entonces su estado inicial debe ser “Pendiente”
- Escenario de Fallo: Dado que se genere una nueva cuota, cuando el sistema no asigne el estado “Pendiente”, entonces debe notificarse un error en el sistema.
**Reglas de negocio:**
**Riesgos asociados:**
- Inconsistencia en reportes de deudas: Una cuota sin estado claro no puede ser interpretada correctamente en reportes o al mostrar el saldo al socio.

- **H.U 6.2- Cambiar el estado a “En revisión” al cargar comprobante**
**Como** Administrador
**Quiero** que el estado apenas se cargue el comprobante sea “En revisión”
**Para** que luego el administrativo lo cambie al que corresponde
**Prioridad:** Must Have
**Estimación:** 5
**Criterios de aceptación:**
- Escenario de Éxito: Dado un socio con una cuota pendiente, cuando carga un comprobante, entonces la cuota cambia automáticamente a “En revisión”
- Escenario de Fallo:  Dado un socio con una cuota pendiente, cuando carga un comprobante, entonces la cuota no cambia automáticamente a “En revisión” y se pone en otro estado incorrecto o no se registra la carga del comprobante.
**Reglas de negocio:**
**Riesgos asociados:**
- Problemas para ubicar el comprobante: si se tiene una lista de comprobantes en revisión esperando a ser aprobados o rechazados; si el estado del comprobante es erróneo o no tiene, nunca aparecerá en el listado para cambiarle su estado 

- **H.U 6.3- Cambiar el estado a “Pagada” al aprobar el comprobante**
**Como** Administrativo
**Quiero** poder cambiar el estado del comprobante a “Pagada”
**Para** registrar el pago del Socio
**Prioridad:** Must Have
**Estimación:** 5
**Criterios de aceptación:**
- Escenario de Éxito: Dado que un administrativo verifica y aprueba el comprobante,entonces el sistema cambia el estado de  la cuota a “Pagada”.
- Escenario de Fallo: Dado que un administrativo verifica y aprueba el comprobante,  entonces el sistema no cambia el estado de  la cuota a “Pagada”.
**Reglas de negocio:**
**Riesgos asociados:**
- No se registra como “Pagada” la cuota: Si bien el administrativo cambió el estado de la cuota, esa acción no repercutió en el sistema, generando así una deuda en el Socio.

- **H.U 6.4- Cambiar el estado a “Vencida” si al superar fecha límite sin pago aprobado** 
**Como** sistema de gestión de socios
**Quiero** que las cuotas sin pago pasen automáticamente a estado “Vencida” al superar su fecha de vencimiento. 
**Para** reflejar correctamente el estado de deuda de cada socio
**Prioridad:** Must Have 
**Estimación:** 8
**Criterios de aceptación:**
- Escenario de Éxito: Dado una cuota con fecha de vencimiento pasado y sin pago, entonces el sistema debe actualizar automáticamente su estado a “Vencida”
- Escenario de Fallo: Dado una cuota con fecha de vencimiento pasado y sin pago, entonces el sistema no actualiza automáticamente su estado a “Vencida” y no figura como deuda al Socio.
**Reglas de negocio:**
**Riesgos asociados:**
- Riesgo de omisión en el cambio de estado: Si el sistema no actualiza el estado por fallos en el proceso automático, las cuotas seguirán figurando como “Pendiente” y el sistema no aplicará las restricciones correspondientes.

- **H.U 6.5- Cambiar el estado nuevamente a “Pendiente” si el comprobante es invalido**
**Como** administrativo 
**Quiero** que la cuota vuelva al estado “Pendiente” si el comprobante de pago es rechazado
**Para** asegurar que el sistema refleje correctamente el estado del pago 
**Prioridad:** Must Have
**Estimación:** 8
**Criterios de aceptación:**
- Escenario de Éxito: Dado un comprobante en revisión, cuando un administrativo lo rechaza, entonces la cuota vuelve a “Pendiente”.
- Escenario de Fallo: Dado un comprobante válido, cuando el sistema no actualiza correctamente el estado de la cuota al ser rechazado, entonces la cuota queda en estado incorrecta impidiendo que el socio cargue un nuevo comprobante o acceda a funcionalidades como reservas.
**Reglas de negocio:**
**Riesgos asociados:**
- Riesgo de inconsistencia en el estado de la cuota: Si el sistema no revierte el estado correctamente, el socio puede quedar habilitado o bloqueado injustamente.

- **H.U 6.6- Notificar al socio los cambios de estado de su cuota** 
**Como** Administrativo
**Quiero** poder avisarle al socio cada vez que su cuota cambie de estado
**Para** que tenga presente si debe pagar o no
**Prioridad:** Should Have
**Estimación:** 13
**Criterios de aceptación:**
- Escenario de Éxito: Dado un cambio de estado de una cuota, cuando ocurra, entonces el sistema debe enviar una notificación al socio.
- Escenario de Fallo: Dado un cambio de estado de una cuota, cuando ocurra, entonces el sistema no envía una notificación al socio.
**Reglas de negocio:**
**Riesgos asociados:**
- No recordar si pagó o no la cuota: si no se le notifica al Socio, el mismo puede olvidar si pagó o no la cuota, y si la tiene vencida. Además de tener la función de notificar en el momento, el socio puede ir al mail a fijarse si no recuerda el estado de su cuota.
