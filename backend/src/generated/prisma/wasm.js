
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.EventoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  fecha: 'fecha',
  horaInicio: 'horaInicio',
  horaFin: 'horaFin',
  capacidad: 'capacidad',
  precioEntrada: 'precioEntrada',
  ubicacion: 'ubicacion',
  descripcion: 'descripcion',
  createdAt: 'createdAt'
};

exports.Prisma.EntradaScalarFieldEnum = {
  id: 'id',
  eventoId: 'eventoId',
  cantidad: 'cantidad',
  precioUnitario: 'precioUnitario',
  total: 'total',
  fechaCompra: 'fechaCompra',
  socioId: 'socioId',
  createdAt: 'createdAt',
  comprobanteUrl: 'comprobanteUrl',
  formaDePago: 'formaDePago'
};

exports.Prisma.SocioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  email: 'email',
  fechaNacimiento: 'fechaNacimiento',
  pais: 'pais',
  sexo: 'sexo',
  fotoCarnet: 'fotoCarnet',
  dni: 'dni',
  usuarioId: 'usuarioId',
  estado: 'estado'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  rol: 'rol',
  creadoEn: 'creadoEn'
};

exports.Prisma.AdministrativoScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  nombre: 'nombre',
  apellido: 'apellido',
  dni: 'dni'
};

exports.Prisma.ActividadScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  monto: 'monto',
  activo: 'activo',
  createdAt: 'createdAt'
};

exports.Prisma.ClaseScalarFieldEnum = {
  id: 'id',
  diaSemana: 'diaSemana',
  horaInicio: 'horaInicio',
  horaFin: 'horaFin',
  activo: 'activo',
  actividadId: 'actividadId',
  profesorId: 'profesorId',
  createdAt: 'createdAt'
};

exports.Prisma.CuotaScalarFieldEnum = {
  id: 'id',
  fecha_pago: 'fecha_pago',
  metodo_pago: 'metodo_pago',
  monto: 'monto',
  estado: 'estado',
  created_at: 'created_at',
  socio_id: 'socio_id',
  mes: 'mes',
  fecha_vencimiento: 'fecha_vencimiento'
};

exports.Prisma.CuotaXactividadScalarFieldEnum = {
  id: 'id',
  cuotaId: 'cuotaId',
  actividadId: 'actividadId',
  monto: 'monto'
};

exports.Prisma.ComprobanteScalarFieldEnum = {
  id: 'id',
  cuotaId: 'cuotaId',
  url: 'url',
  activo: 'activo',
  subido_en: 'subido_en'
};

exports.Prisma.ProfesorScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  email: 'email',
  activo: 'activo',
  createdAt: 'createdAt'
};

exports.Prisma.ActividadSocioScalarFieldEnum = {
  id: 'id',
  actividadId: 'actividadId',
  socioId: 'socioId'
};

exports.Prisma.ReservaScalarFieldEnum = {
  id: 'id',
  cancha: 'cancha',
  deporte: 'deporte',
  fecha: 'fecha',
  hora: 'hora',
  estado: 'estado',
  socioId: 'socioId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Sexo = exports.$Enums.Sexo = {
  MASCULINO: 'MASCULINO',
  FEMENINO: 'FEMENINO',
  OTRO: 'OTRO'
};

exports.DiaSemana = exports.$Enums.DiaSemana = {
  LUNES: 'LUNES',
  MARTES: 'MARTES',
  MIERCOLES: 'MIERCOLES',
  JUEVES: 'JUEVES',
  VIERNES: 'VIERNES',
  SABADO: 'SABADO',
  DOMINGO: 'DOMINGO'
};

exports.estado_cuota = exports.$Enums.estado_cuota = {
  PENDIENTE: 'PENDIENTE',
  VENCIDA: 'VENCIDA',
  PAGADA: 'PAGADA',
  EN_REVISION: 'EN_REVISION',
  RECHAZADA: 'RECHAZADA'
};

exports.Mes = exports.$Enums.Mes = {
  ENERO: 'ENERO',
  FEBRERO: 'FEBRERO',
  MARZO: 'MARZO',
  ABRIL: 'ABRIL',
  MAYO: 'MAYO',
  JUNIO: 'JUNIO',
  JULIO: 'JULIO',
  AGOSTO: 'AGOSTO',
  SEPTIEMBRE: 'SEPTIEMBRE',
  OCTUBRE: 'OCTUBRE',
  NOVIEMBRE: 'NOVIEMBRE',
  DICIEMBRE: 'DICIEMBRE'
};

exports.EstadoReserva = exports.$Enums.EstadoReserva = {
  ACTIVA: 'ACTIVA',
  CANCELADA: 'CANCELADA',
  COMPLETADA: 'COMPLETADA'
};

exports.FormaDePago = exports.$Enums.FormaDePago = {
  CBU: 'CBU',
  EFECTIVO: 'EFECTIVO'
};

exports.paisesLatam = exports.$Enums.paisesLatam = {
  ARGENTINA: 'ARGENTINA',
  BOLIVIA: 'BOLIVIA',
  BRASIL: 'BRASIL',
  CHILE: 'CHILE',
  COLOMBIA: 'COLOMBIA',
  COSTA_RICA: 'COSTA_RICA',
  CUBA: 'CUBA',
  ECUADOR: 'ECUADOR',
  EL_SALVADOR: 'EL_SALVADOR',
  GUATEMALA: 'GUATEMALA',
  HONDURAS: 'HONDURAS',
  MEXICO: 'MEXICO',
  NICARAGUA: 'NICARAGUA',
  PANAMA: 'PANAMA',
  PARAGUAY: 'PARAGUAY',
  PERU: 'PERU',
  PUERTO_RICO: 'PUERTO_RICO',
  REPUBLICA_DOMINICANA: 'REPUBLICA_DOMINICANA',
  URUGUAY: 'URUGUAY',
  VENEZUELA: 'VENEZUELA'
};

exports.Prisma.ModelName = {
  Evento: 'Evento',
  Entrada: 'Entrada',
  Socio: 'Socio',
  Usuario: 'Usuario',
  Administrativo: 'Administrativo',
  Actividad: 'Actividad',
  Clase: 'Clase',
  Cuota: 'Cuota',
  cuotaXactividad: 'cuotaXactividad',
  Comprobante: 'Comprobante',
  Profesor: 'Profesor',
  ActividadSocio: 'ActividadSocio',
  Reserva: 'Reserva'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/app/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/app/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../src/generated/prisma\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Evento {\n  id            Int       @id @default(autoincrement())\n  nombre        String\n  fecha         DateTime\n  horaInicio    String\n  horaFin       String\n  capacidad     Int\n  precioEntrada Float\n  ubicacion     String\n  descripcion   String\n  createdAt     DateTime  @default(now())\n  entradas      Entrada[]\n}\n\nmodel Entrada {\n  id             Int         @id @default(autoincrement())\n  eventoId       Int\n  cantidad       Int\n  precioUnitario Float\n  total          Float\n  fechaCompra    DateTime    @default(now())\n  socioId        Int?\n  createdAt      DateTime    @default(now())\n  comprobanteUrl String?\n  formaDePago    FormaDePago @default(EFECTIVO)\n  evento         Evento      @relation(fields: [eventoId], references: [id])\n  socio          Socio?      @relation(fields: [socioId], references: [id])\n}\n\nmodel Socio {\n  id              Int              @id @default(autoincrement())\n  nombre          String\n  apellido        String\n  email           String\n  fechaNacimiento DateTime\n  pais            paisesLatam\n  sexo            Sexo\n  fotoCarnet      String?\n  dni             Int              @unique\n  usuarioId       Int              @unique\n  estado          String           @default(\"ACTIVO\")\n  actividades     ActividadSocio[]\n  Cuota           Cuota[]\n  entradas        Entrada[]\n  reservas        Reserva[]\n  usuario         Usuario          @relation(fields: [usuarioId], references: [id])\n}\n\nmodel Usuario {\n  id             Int             @id @default(autoincrement())\n  email          String          @unique\n  password       String\n  rol            String\n  creadoEn       DateTime        @default(now())\n  socio          Socio?\n  administrativo Administrativo?\n}\n\nmodel Administrativo {\n  id        Int     @id @default(autoincrement())\n  usuarioId Int     @unique\n  usuario   Usuario @relation(fields: [usuarioId], references: [id])\n  nombre    String\n  apellido  String\n  dni       String  @unique\n}\n\nmodel Actividad {\n  id              Int               @id @default(autoincrement())\n  nombre          String\n  monto           Float\n  activo          Boolean           @default(true)\n  createdAt       DateTime          @default(now())\n  clases          Clase[]\n  cuotaXactividad cuotaXactividad[]\n  socios          ActividadSocio[]\n}\n\nmodel Clase {\n  id          Int       @id @default(autoincrement())\n  diaSemana   DiaSemana\n  horaInicio  String\n  horaFin     String\n  activo      Boolean   @default(true)\n  actividadId Int\n  profesorId  Int?\n  createdAt   DateTime  @default(now())\n  actividad   Actividad @relation(fields: [actividadId], references: [id])\n  profesor    Profesor? @relation(fields: [profesorId], references: [id])\n}\n\nmodel Cuota {\n  id                Int               @id @default(autoincrement())\n  fecha_pago        DateTime?         @db.Date\n  metodo_pago       FormaDePago?\n  monto             Decimal           @db.Decimal(12, 3)\n  estado            estado_cuota      @default(PENDIENTE)\n  created_at        DateTime          @default(now()) @db.Timestamptz(6)\n  socio_id          Int\n  mes               Mes?\n  fecha_vencimiento DateTime          @db.Date\n  comprobante       Comprobante[]\n  Socio             Socio             @relation(fields: [socio_id], references: [id], onUpdate: NoAction)\n  actividades       cuotaXactividad[]\n\n  @@unique([socio_id, mes])\n  @@index([estado], map: \"id_cuota_estado\")\n}\n\nmodel cuotaXactividad {\n  id          Int       @id @default(autoincrement())\n  cuotaId     Int\n  actividadId Int\n  monto       Decimal   @db.Decimal(12, 3)\n  Actividad   Actividad @relation(fields: [actividadId], references: [id])\n  Cuota       Cuota     @relation(fields: [cuotaId], references: [id])\n\n  @@unique([cuotaId, actividadId])\n}\n\nmodel Comprobante {\n  id        Int      @id @default(autoincrement())\n  cuotaId   Int\n  url       String\n  activo    Boolean  @default(true)\n  subido_en DateTime @default(now())\n  Cuota     Cuota    @relation(fields: [cuotaId], references: [id])\n\n  @@unique([cuotaId, activo])\n}\n\nmodel Profesor {\n  id        Int      @id @default(autoincrement())\n  nombre    String\n  apellido  String\n  email     String   @unique\n  activo    Boolean  @default(true)\n  createdAt DateTime @default(now())\n  clases    Clase[]\n}\n\nmodel ActividadSocio {\n  id          Int       @id @default(autoincrement())\n  actividadId Int\n  socioId     Int\n  actividad   Actividad @relation(fields: [actividadId], references: [id])\n  Socio       Socio     @relation(fields: [socioId], references: [id])\n\n  @@unique([actividadId, socioId])\n}\n\nmodel Reserva {\n  id        Int           @id @default(autoincrement())\n  cancha    String\n  deporte   String\n  fecha     DateTime      @db.Date\n  hora      String\n  estado    EstadoReserva @default(ACTIVA)\n  socioId   Int\n  createdAt DateTime      @default(now())\n  updatedAt DateTime      @updatedAt\n  socio     Socio         @relation(fields: [socioId], references: [id])\n\n  @@unique([cancha, fecha, hora, estado], name: \"unique_active_reservation\")\n  @@index([socioId])\n  @@index([fecha])\n}\n\nenum Sexo {\n  MASCULINO\n  FEMENINO\n  OTRO\n}\n\nenum DiaSemana {\n  LUNES\n  MARTES\n  MIERCOLES\n  JUEVES\n  VIERNES\n  SABADO\n  DOMINGO\n}\n\nenum estado_cuota {\n  PENDIENTE\n  VENCIDA\n  PAGADA\n  EN_REVISION\n  RECHAZADA\n}\n\nenum Mes {\n  ENERO\n  FEBRERO\n  MARZO\n  ABRIL\n  MAYO\n  JUNIO\n  JULIO\n  AGOSTO\n  SEPTIEMBRE\n  OCTUBRE\n  NOVIEMBRE\n  DICIEMBRE\n}\n\nenum EstadoReserva {\n  ACTIVA\n  CANCELADA\n  COMPLETADA\n}\n\nenum FormaDePago {\n  CBU\n  EFECTIVO\n}\n\nenum paisesLatam {\n  ARGENTINA\n  BOLIVIA\n  BRASIL\n  CHILE\n  COLOMBIA\n  COSTA_RICA           @map(\"COSTA RICA\")\n  CUBA\n  ECUADOR\n  EL_SALVADOR          @map(\"EL SALVADOR\")\n  GUATEMALA\n  HONDURAS\n  MEXICO\n  NICARAGUA\n  PANAMA\n  PARAGUAY\n  PERU\n  PUERTO_RICO          @map(\"PUERTO RICO\")\n  REPUBLICA_DOMINICANA @map(\"REPUBLICA DOMINICANA\")\n  URUGUAY\n  VENEZUELA\n}\n",
  "inlineSchemaHash": "47415881e910e9e4e905f222e2d0247be867bc6363003435ebf2d8906ebd624c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Evento\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fecha\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"horaInicio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"horaFin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacidad\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"precioEntrada\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"ubicacion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entradas\",\"kind\":\"object\",\"type\":\"Entrada\",\"relationName\":\"EntradaToEvento\"}],\"dbName\":null},\"Entrada\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"eventoId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cantidad\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"precioUnitario\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fechaCompra\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"socioId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comprobanteUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formaDePago\",\"kind\":\"enum\",\"type\":\"FormaDePago\"},{\"name\":\"evento\",\"kind\":\"object\",\"type\":\"Evento\",\"relationName\":\"EntradaToEvento\"},{\"name\":\"socio\",\"kind\":\"object\",\"type\":\"Socio\",\"relationName\":\"EntradaToSocio\"}],\"dbName\":null},\"Socio\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellido\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaNacimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"pais\",\"kind\":\"enum\",\"type\":\"paisesLatam\"},{\"name\":\"sexo\",\"kind\":\"enum\",\"type\":\"Sexo\"},{\"name\":\"fotoCarnet\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dni\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actividades\",\"kind\":\"object\",\"type\":\"ActividadSocio\",\"relationName\":\"ActividadSocioToSocio\"},{\"name\":\"Cuota\",\"kind\":\"object\",\"type\":\"Cuota\",\"relationName\":\"CuotaToSocio\"},{\"name\":\"entradas\",\"kind\":\"object\",\"type\":\"Entrada\",\"relationName\":\"EntradaToSocio\"},{\"name\":\"reservas\",\"kind\":\"object\",\"type\":\"Reserva\",\"relationName\":\"ReservaToSocio\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"SocioToUsuario\"}],\"dbName\":null},\"Usuario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creadoEn\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"socio\",\"kind\":\"object\",\"type\":\"Socio\",\"relationName\":\"SocioToUsuario\"},{\"name\":\"administrativo\",\"kind\":\"object\",\"type\":\"Administrativo\",\"relationName\":\"AdministrativoToUsuario\"}],\"dbName\":null},\"Administrativo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"AdministrativoToUsuario\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellido\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dni\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Actividad\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monto\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clases\",\"kind\":\"object\",\"type\":\"Clase\",\"relationName\":\"ActividadToClase\"},{\"name\":\"cuotaXactividad\",\"kind\":\"object\",\"type\":\"cuotaXactividad\",\"relationName\":\"ActividadTocuotaXactividad\"},{\"name\":\"socios\",\"kind\":\"object\",\"type\":\"ActividadSocio\",\"relationName\":\"ActividadToActividadSocio\"}],\"dbName\":null},\"Clase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"diaSemana\",\"kind\":\"enum\",\"type\":\"DiaSemana\"},{\"name\":\"horaInicio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"horaFin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"actividadId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profesorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actividad\",\"kind\":\"object\",\"type\":\"Actividad\",\"relationName\":\"ActividadToClase\"},{\"name\":\"profesor\",\"kind\":\"object\",\"type\":\"Profesor\",\"relationName\":\"ClaseToProfesor\"}],\"dbName\":null},\"Cuota\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fecha_pago\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metodo_pago\",\"kind\":\"enum\",\"type\":\"FormaDePago\"},{\"name\":\"monto\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"estado\",\"kind\":\"enum\",\"type\":\"estado_cuota\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"socio_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mes\",\"kind\":\"enum\",\"type\":\"Mes\"},{\"name\":\"fecha_vencimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comprobante\",\"kind\":\"object\",\"type\":\"Comprobante\",\"relationName\":\"ComprobanteToCuota\"},{\"name\":\"Socio\",\"kind\":\"object\",\"type\":\"Socio\",\"relationName\":\"CuotaToSocio\"},{\"name\":\"actividades\",\"kind\":\"object\",\"type\":\"cuotaXactividad\",\"relationName\":\"CuotaTocuotaXactividad\"}],\"dbName\":null},\"cuotaXactividad\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cuotaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actividadId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"monto\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"Actividad\",\"kind\":\"object\",\"type\":\"Actividad\",\"relationName\":\"ActividadTocuotaXactividad\"},{\"name\":\"Cuota\",\"kind\":\"object\",\"type\":\"Cuota\",\"relationName\":\"CuotaTocuotaXactividad\"}],\"dbName\":null},\"Comprobante\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cuotaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"subido_en\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Cuota\",\"kind\":\"object\",\"type\":\"Cuota\",\"relationName\":\"ComprobanteToCuota\"}],\"dbName\":null},\"Profesor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellido\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clases\",\"kind\":\"object\",\"type\":\"Clase\",\"relationName\":\"ClaseToProfesor\"}],\"dbName\":null},\"ActividadSocio\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actividadId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"socioId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actividad\",\"kind\":\"object\",\"type\":\"Actividad\",\"relationName\":\"ActividadToActividadSocio\"},{\"name\":\"Socio\",\"kind\":\"object\",\"type\":\"Socio\",\"relationName\":\"ActividadSocioToSocio\"}],\"dbName\":null},\"Reserva\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cancha\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deporte\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fecha\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"hora\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estado\",\"kind\":\"enum\",\"type\":\"EstadoReserva\"},{\"name\":\"socioId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"socio\",\"kind\":\"object\",\"type\":\"Socio\",\"relationName\":\"ReservaToSocio\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

